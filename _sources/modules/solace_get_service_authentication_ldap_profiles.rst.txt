:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_get_service_authentication_ldap_profiles.py

.. _solace_get_service_authentication_ldap_profiles_module:

solace_get_service_authentication_ldap_profiles -- get ldap profiles
====================================================================

Get a list of LDAP Profile Objects configured on a Broker Service.




Examples
--------

.. code-block:: yaml+jinja

   
   hosts: all
   gather_facts: no
   any_errors_fatal: true
   collections:
   - solace.pubsub_plus
   module_defaults:
     solace_service_authentication_ldap_profile:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
       solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
     solace_get_service_authentication_ldap_profiles:
       host: "{{ sempv2_host }}"
       port: "{{ sempv2_port }}"
       secure_connection: "{{ sempv2_is_secure_connection }}"
       username: "{{ sempv2_username }}"
       password: "{{ sempv2_password }}"
       timeout: "{{ sempv2_timeout }}"
       solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
       solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
   tasks:
   - name: example for self-hosted broker
     block:
       - name: create ldap profile
         solace_service_authentication_ldap_profile:
           name: foo
           sempv1_settings:
             admin:
               admin-dn: adminDN
             search:
               base-dn:
                 distinguished-name: baseDN
               filter:
                 filter: searchFilter
             ldap-server:
               ldap-host: ldap://192.167.123.4:389
               server-index: "1"
           state: present

       - name: get
         solace_get_service_authentication_ldap_profiles:
           where_name: "foo"
         register: result
     when: broker_type != 'solace_cloud'

   - name: example for Solace Cloud broker
     block:
       - name: create or update ldap profile
         solace_service_authentication_ldap_profile:
           name: default
           solace_cloud_settings:
             adminDn: adminDN
             ldapServerOne: ldap://192.167.123.4:389
             searchBaseDn: baseDN
             searchFilter: searchFilter
       - name: get
         solace_get_service_authentication_ldap_profiles:
         register: result
     when: broker_type == 'solace_cloud'

   - name: print result
     debug:
       msg:
       - "{{ result.result_list }}"
       - "{{ result.result_list_count }}"



Notes
-----

.. note::
   - STATUS: **EXPERIMENTAL**
   - Module Sempv1: https://docs.solace.com/Configuring-and-Managing/Configuring-LDAP-Authentication.htm
   - Module Solace Cloud: no API documentation available, reverse engineer from console.
   - Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/
   - Sempv2 Monitor Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/
   - Sempv2 Action Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/action/index.html#/


See Also
--------

.. seealso::

   - :ref:`solace_service_authentication_ldap_profile_module`



Parameters
----------

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

reverse_proxy (optional)
  Use a reverse proxy / api gateway. Note: **Experimental. Not permitted for Solace Cloud API**.

  | **type**: dict

  headers (optional)
    Additional headers to add to the http call. Example: 'apiKey: {my-api-key}'.

    | **type**: dict

    x-asc-module (optional)
      Flag for the module to add the header 'x-asc-module:{module-name}' to the http call with it's module name.

      | **type**: bool
      | **default**: False

    x-asc-module-op (optional)
      Flag for the module to add the header 'x-asc-module-op:{module operation}' to the http call with the module's operation.

      | **type**: bool
      | **default**: False


  query_params (optional)
    Additional query paramters to add to the URL. Example: 'apiCode: {my-api-code}'.

    | **type**: dict

  semp_base_path (optional)
    Base path prepended to all SEMP calls. Example: 'my/base/path'. Resulting URL will be: http(s)://{host}:{port}/{semp_base_path}/{module-semp-call-path}

    | **type**: str

  use_basic_auth (optional)
    Flag to use basic authentication in the http(s) call or not. Uses 'username'/'password'.

    | **type**: bool
    | **default**: False


secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool
  | **default**: False

solace_cloud_api_token (optional)
  The API Token.

  Generate using Solace Cloud console with the appropriate permissions for the operations you want to enable.

  Either both (solace_cloud_api_token AND solace_cloud_service_id) must be provided or none.

  | **type**: str

solace_cloud_home (optional)
  The Solace Cloud home region.

  | **type**: str
  | **choices**: us, au, US, AU, 

solace_cloud_service_id (optional)
  The service id in Solace Cloud.

  Click on the service in Solace Cloud - the service id is in the URL.

  Either both (solace_cloud_api_token AND solace_cloud_service_id) must be provided or none.

  | **type**: str

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

validate_certs (optional)
  Flag to switch validation of client certificates on/off when using a secure connection.

  | **type**: bool
  | **default**: True

where_name (optional)
  Query for ldap profile name. Maps to 'profile-name' in the SEMP V1 API.

  Has no effect for Solace Cloud, there is only 1 profile named 'default'.

  | **type**: str
  | **default**: *

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

result_list
  The list of objects found containing requested fields. Payload depends on API called.

  | **returned**: success
  | **type**: list
  | **sample**:

  .. code-block:: json

     {
     "sempv1-sample": [
       {
         "admin-dn": null,
         "group-membership-secondary-search": {
           "base-dn": null,
           "deref": "always",
           "filter": "(member=$ATTRIBUTE_VALUE_FROM_PRIMARY_SEARCH)",
           "filter-attribute-from-primary-search": "dn",
           "follow-continuation-references": "Yes",
           "scope": "subtree",
           "shutdown": "Yes",
           "timeout": "5"
         },
         "ldap-servers-v2": {
           "ldap-server": [
             {
               "index": "1",
               "ldap-uri": null
             },
             {
               "index": "2",
               "ldap-uri": null
             },
             {
               "index": "3",
               "ldap-uri": null
             }
           ]
         },
         "profile-name": "default",
         "referral-session": {
           "last-error": "None",
           "last-error-time": null,
           "referral-host-uri": null
         },
         "search": {
           "base-dn": null,
           "deref": "always",
           "filter": "(cn=$CLIENT_USERNAME)",
           "follow-continuation-references": "Yes",
           "scope": "subtree",
           "timeout": "5"
         },
         "shutdown": "Yes",
         "starttls": "No",
         "tls": "No",
         "unauthenticated-authentication": "Disallowed"
       }
     ],
     "solace-cloud-sample": [
       {
         "adminDn": "adminDn",
         "adminPassword": "adminPwd",
         "allowUnauthenticatedAuthentication": false,
         "enabled": true,
         "groupMembershipSecondarySearchBaseDn": null,
         "groupMembershipSecondarySearchDeref": "ALWAYS",
         "groupMembershipSecondarySearchEnabled": false,
         "groupMembershipSecondarySearchFilter": "(member=$ATTRIBUTE_VALUE_FROM_PRIMARY_SEARCH)",
         "groupMembershipSecondarySearchFilterAttributeFromPrimarySearch": null,
         "groupMembershipSecondarySearchFollowContinuationReferences": false,
         "groupMembershipSecondarySearchFollowContinuationShutdown": false,
         "groupMembershipSecondarySearchScope": "SUBTREE",
         "groupMembershipSecondarySearchTimeout": 5,
         "id": "default",
         "ldapServerOne": "ldap://ldap_1.myorg.com:389",
         "ldapServerThree": null,
         "ldapServerTwo": "ldap://ldap_2.myorg.com:389",
         "profileName": "default",
         "searchBaseDn": "ou=Users,o=orgId,dc=myorg,dc=com",
         "searchDeref": "ALWAYS",
         "searchFilter": "(cn=$CLIENT_USERNAME)",
         "searchFollowContinuationReferences": false,
         "searchScope": "SUBTREE",
         "searchTimeout": 5,
         "startTls": false,
         "type": "ldapAuthenticationProfile"
       }
     ]
   }

result_list_count
  Number of items in result_list.

  | **returned**: success
  | **type**: int

rc
  Return code. rc=0 on success, rc=1 on error.

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     {
     "error": {
       "rc": 1
     },
     "success": {
       "rc": 0
     }
   }

msg
  The response from the HTTP call in case of error.

  | **returned**: error
  | **type**: dict


