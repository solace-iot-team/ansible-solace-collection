:github_url: https://github.com/solace-iot-team/ansible-solace-collection/tree/main/src/ansible_collections/solace/pubsub_plus/plugins/modules/solace_client_cert_authority.py

.. _solace_client_cert_authority_module:

solace_client_cert_authority -- client certificate authority
============================================================

Allows addition, removal and configuration of client certificate authority objects on Solace Brokers in an idempotent manner.

Supports standalone brokers and Solace Cloud.


Requirements
------------

The below requirements are needed on the host that executes this module:

- Requires min SempV2 API v2.19 for standalone brokers. See :ref:`solace_cert_authority <solace_cert_authority_module>` for earlier SempV2 versions.


Examples
--------

.. code-block:: yaml+jinja

   
   # Copyright (c) 2022, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
   # GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

   -
     name: "solace_client_cert_authority.doc-example"
     hosts: all
     gather_facts: no
     any_errors_fatal: true
     collections:
       - solace.pubsub_plus
     module_defaults:
       solace.pubsub_plus.solace_gather_facts:
         host: "{{ sempv2_host }}"
         port: "{{ sempv2_port }}"
         secure_connection: "{{ sempv2_is_secure_connection }}"
         username: "{{ sempv2_username }}"
         password: "{{ sempv2_password }}"
         timeout: "{{ sempv2_timeout }}"
         solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
         solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
       solace.pubsub_plus.solace_client_cert_authority:
         host: "{{ sempv2_host }}"
         port: "{{ sempv2_port }}"
         secure_connection: "{{ sempv2_is_secure_connection }}"
         username: "{{ sempv2_username }}"
         password: "{{ sempv2_password }}"
         timeout: "{{ sempv2_timeout }}"
         solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
         solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
       solace.pubsub_plus.solace_get_client_cert_authorities:
         host: "{{ sempv2_host }}"
         port: "{{ sempv2_port }}"
         secure_connection: "{{ sempv2_is_secure_connection }}"
         username: "{{ sempv2_username }}"
         password: "{{ sempv2_password }}"
         timeout: "{{ sempv2_timeout }}"
         solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
         solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
       solace.pubsub_plus.solace_client_cert_authority_ocsp_trusted_cn:
         host: "{{ sempv2_host }}"
         port: "{{ sempv2_port }}"
         secure_connection: "{{ sempv2_is_secure_connection }}"
         username: "{{ sempv2_username }}"
         password: "{{ sempv2_password }}"
         timeout: "{{ sempv2_timeout }}"
       solace.pubsub_plus.solace_get_client_cert_authority_ocsp_trusted_cns:
         host: "{{ sempv2_host }}"
         port: "{{ sempv2_port }}"
         secure_connection: "{{ sempv2_is_secure_connection }}"
         username: "{{ sempv2_username }}"
         password: "{{ sempv2_password }}"
         timeout: "{{ sempv2_timeout }}"
     tasks:
     - name: gather facts
       solace_gather_facts:
       # no_log: true
     - set_fact:
         is_solace_cloud: "{{ ansible_facts.solace.isSolaceCloud }}"
         sempv2_version: "{{ ansible_facts.solace.about.api.sempVersion }}"
         working_dir: "{{ WORKING_DIR }}"
         cert_file: "{{ WORKING_DIR }}/cert.pem"

     - name: end play if incorrect sempV2 version
       meta: end_play
       when: sempv2_version|float < 2.19

     - name: "main: generate certificate"
       command: >
         openssl req
         -x509
         -newkey
         rsa:4096
         -keyout {{ working_dir }}/key.pem
         -out {{ cert_file }}
         -days 365
         -nodes
         -subj "/C=UK/ST=London/L=London/O=Solace/OU=Org/CN=www.example.com"

     - name: create cert authority
       solace_client_cert_authority:
         name: asc_test
         settings:
           certContent: "{{ lookup('file', cert_file) }}"
           revocationCheckEnabled: false
         state: present

     - name: get config of cert authority
       solace_get_client_cert_authorities:
         query_params:
           where:
             - "certAuthorityName==asc_test"

     - name: get monitor of cert authority
       solace_get_client_cert_authorities:
         api: monitor
         query_params:
           where:
             - "certAuthorityName==asc_test"

   # set an OCSP trusted name
   # note: not available in Solace Cloud API
     - name: set trusted name
       block:
       - name: add trusted name
         solace_client_cert_authority_ocsp_trusted_cn:
           name: "*.domain.com"
           client_cert_authority_name: asc_test
           state: present

       - name: get list of trusted names
         solace_get_client_cert_authority_ocsp_trusted_cns:
           client_cert_authority_name: asc_test

       - name: remove trusted name
         solace_client_cert_authority_ocsp_trusted_cn:
           name: "*.domain.com"
           client_cert_authority_name: asc_test
           state: absent

       when: not is_solace_cloud

     - name: remove cert authority
       solace_client_cert_authority:
         name: asc_test
         state: absent

   ###
   # The End.



Notes
-----

.. note::
   - Module Sempv2 Config: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/clientCertAuthority
   - Module Solace Cloud API: not available
   - Sempv2 Config Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/config/index.html#/
   - Sempv2 Monitor Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/monitor/index.html#/
   - Sempv2 Action Reference: https://docs.solace.com/API-Developer-Online-Ref-Documentation/swagger-ui/action/index.html#/


See Also
--------

.. seealso::

   - :ref:`solace_get_client_cert_authorities_module`
   - :ref:`solace_cert_authority_module`



Parameters
----------

host (optional)
  Hostname of Solace Broker.

  | **type**: str
  | **default**: localhost

name (required)
  The name of the Client Certificate Authority. Maps to 'certAuthorityName' in the Sempv2 API.

  | **type**: str

password (optional)
  Administrator password for Solace Broker.

  | **type**: str
  | **default**: admin

port (optional)
  Management port of Solace Broker.

  | **type**: int
  | **default**: 8080

reverse_proxy (optional)
  Use a reverse proxy / api gateway. Note: **Experimental. Not permitted for Solace Cloud API**.

  | **type**: dict

  headers (optional)
    Additional headers to add to the http call. Example: 'apiKey: {my-api-key}'.

    | **type**: dict

    x-asc-module (optional)
      Flag for the module to add the header 'x-asc-module:{module-name}' to the http call with it's module name.

      | **type**: bool
      | **default**: False

    x-asc-module-op (optional)
      Flag for the module to add the header 'x-asc-module-op:{module operation}' to the http call with the module's operation.

      | **type**: bool
      | **default**: False


  query_params (optional)
    Additional query paramters to add to the URL. Example: 'apiCode: {my-api-code}'.

    | **type**: dict

  semp_base_path (optional)
    Base path prepended to all SEMP calls. Example: 'my/base/path'. Resulting URL will be: http(s)://{host}:{port}/{semp_base_path}/{module-semp-call-path}

    | **type**: str

  use_basic_auth (optional)
    Flag to use basic authentication in the http(s) call or not. Uses 'username'/'password'.

    | **type**: bool
    | **default**: False


secure_connection (optional)
  If true, use https rather than http.

  | **type**: bool
  | **default**: False

sempv2_settings (optional)
  JSON dictionary of additional configuration for the SEMP V2 API. See Reference documentation.

  | **type**: dict
  | **aliases**: settings

solace_cloud_api_token (optional)
  The API Token.

  Generate using Solace Cloud console with the appropriate permissions for the operations you want to enable.

  Either both (solace_cloud_api_token AND solace_cloud_service_id) must be provided or none.

  | **type**: str

solace_cloud_home (optional)
  The Solace Cloud home region.

  | **type**: str
  | **choices**: us, au, US, AU, 

solace_cloud_service_id (optional)
  The service id in Solace Cloud.

  Click on the service in Solace Cloud - the service id is in the URL.

  Either both (solace_cloud_api_token AND solace_cloud_service_id) must be provided or none.

  | **type**: str

state (optional)
  Target state.

  | **type**: str
  | **default**: present
  | **choices**: present, absent

timeout (optional)
  Connection timeout in seconds for the http request.

  | **type**: int
  | **default**: 10

username (optional)
  Administrator username for Solace Broker.

  | **type**: str
  | **default**: admin

validate_certs (optional)
  Flag to switch validation of client certificates on/off when using a secure connection.

  | **type**: bool
  | **default**: True

x_broker (optional)
  Custom HTTP header with the broker virtual router id, if using a SEMPv2 Proxy/agent infrastructure.

  | **type**: str





Return Values
-------------

response
  The response from the Solace Sempv2 request.

  | **returned**: success
  | **type**: dict

msg
  The response from the HTTP call in case of error.

  | **returned**: error
  | **type**: dict

rc
  Return code. rc=0 on success, rc=1 on error.

  | **returned**: always
  | **type**: int
  | **sample**:

  .. code-block:: json

     {
     "error": {
       "rc": 1
     },
     "success": {
       "rc": 0
     }
   }


